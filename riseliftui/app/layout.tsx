import type { Metadata } from "next";
import localFont from "next/font/local";

import {
    Roboto_Slab,
    Montserrat
} from 'next/font/google';

const roboto_slab = Roboto_Slab({
    subsets: ['latin'],
    display: 'swap', // Recommended for better performance and less layout shift
    variable: '--font-roboto-slab', // Define a CSS variable name
});

const montserrat = Montserrat({
    weight: ['300', '400', '500', '700'], // Specify desired weights
    subsets: ['latin'],
    display: 'swap', // Optimizes font loading
    variable: '--font-montserrat', // Define a CSS variable name
});




import "./base_css/root.css";
import "./base_css/globals.css";
import "./base_css/typography.css";


import { config } from '@fortawesome/fontawesome-svg-core'
import '@fortawesome/fontawesome-svg-core/styles.css'
config.autoAddCss = false

import { CommonDataConstData } from "./data/models";



import  "bootstrap/dist/css/bootstrap.min.css"

import AddBootstrap from "./AddBootstrap";


import Header from './common_components/header'
import Footer from "./common_components/footer";

// const geistSans = localFont({
//     src: "./fonts/GeistVF.woff",
//     variable: "--font-geist-sans",
//     weight: "100 900",
// });
// const geistMono = localFont({
//     src: "./fonts/GeistMonoVF.woff",
//     variable: "--font-geist-mono",
//     weight: "100 900",
// });

export const metadata: Metadata = {
    title: "Create Next App",
    description: "Generated by create next app",
};

export const commondata: CommonDataConstData = {
    app_display_name: "UPRISE",
};

import { AppContextProvider } from "./appData";


export default function RootLayout({
    children,
}: Readonly<{
    children: React.ReactNode;
}>) {
    return (
    <html lang="en">
        <AppContextProvider>
            <body
                className={
                    `
                    ${roboto_slab.variable}
                    ${montserrat.variable}
                    `
                }>
                <AddBootstrap/>
                <Header/>
                {children}
                <Footer/>  
            </body>
        </AppContextProvider>
    </html>
    );
}
